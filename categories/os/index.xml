<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>os - Category - Viraj Shah</title>
        <link>https://viraj071.github.io/categories/os/</link>
        <description>os - Category - Viraj Shah</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>virajshah.77@gmail.com (Viraj Shah)</managingEditor>
            <webMaster>virajshah.77@gmail.com (Viraj Shah)</webMaster><lastBuildDate>Thu, 26 Oct 2017 08:22:44 -0700</lastBuildDate><atom:link href="https://viraj071.github.io/categories/os/" rel="self" type="application/rss+xml" /><item>
    <title>User and Kernel Level Threads</title>
    <link>https://viraj071.github.io/user-kernel-level-threads/</link>
    <pubDate>Thu, 26 Oct 2017 08:22:44 -0700</pubDate>
    <author>Author</author>
    <guid>https://viraj071.github.io/user-kernel-level-threads/</guid>
    <description><![CDATA[Kernel-Level Theads These threads are also known as &ldquo;OS-level threads&rdquo; or &ldquo;native threads&rdquo;. Kernel-level threads are managed by the OS. This means all thread scheduling happens in the kernel. For that to happen, the kernel maintains a thread table that keeps track of all threads in the system. These threads are created by making a system call into the OS.
Advantages:
 The scheduler can give more time to a process having a large number of threads rather than to a process having a smaller number of threads.]]></description>
</item></channel>
</rss>
